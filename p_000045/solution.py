#! /usr/bin/env python3

"""
Problem 45: Triangular, Pentagonal, and Hexagonal
=================================================

Link: https://projecteuler.net/problem=45

Description
===========

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle     T[n] = n(n + 1)/2         1, 3, 6, 10, 15, ...
Pentagonal   P[n] = n(3n - 1)/2        1, 5, 12, 22, 35, ...
Hexagonal    H[n] = n(2n - 1)          1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

from pelib import generate_triangle_numbers, generate_pentagonal_numbers, generate_hexagonal_numbers

def generate_matches():

    tg = generate_triangle_numbers()
    pg = generate_pentagonal_numbers()
    hg = generate_hexagonal_numbers()

    t = next(tg)
    p = next(pg)
    h = next(hg)

    while True:
        if t == p == h:
            yield t

        if t <= min(p, h):
            t = next(tg)
        elif p <= h:
            p = next(pg)
        else:
            h = next(hg)

def solve() -> int:
    match_generator = generate_matches()
    for _ in range(3):
        match = next(match_generator)
    return match

def main():
    solution = solve()
    print("solution:", solution)

if __name__ == "__main__":
    main()
